name: Bump Version
description: Bumps the version in the source code per the language detected

inputs:
  version:
    description: The new version to set
    required: true
  regex:
    description: The regex to use to match the version
    required: false
    default: '[0-9]*\.[0-9]*\.[0-9]*'

runs:
  using: composite
  steps:
    - name: Check for JavaScript
      if: hashFiles('package.json') != ''
      shell: bash
      run: |
        echo "JavaScript detected..."
        sed -i "s/\"version\": \"${{ inputs.version }}\"/\"version\": \"${{ inputs.version }}\"/" package.json
        echo "Updated package.json"
    - name: Check for .NET
      if: hashFiles('*.csproj') != ''
      shell: bash
      run: |
        echo ".NET detected..."
        for csproj in *.csproj; do
          [ -e "$csproj" ] || continue
          sed -i 's|<Version>${{ inputs.version }}</Version>|<Version>'${{ inputs.version }}'</Version>|' "$csproj"
          echo "Updated $csproj"
        done
    - name: Check for .NET
      if: hashFiles('Directory.Build.props') != ''
      shell: bash
      run: |
        echo ".NET detected..."
        sed -i 's|<Version>${{ inputs.version }}</Version>|<Version>'${{ inputs.version }}'</Version>|' Directory.Build.props
        echo "Updated Directory.Build.props"
    - name: Check for Python
      if: hashFiles('setup.py') != ''
      shell: bash
      run: |
        echo "Python detected..."
        sed -i "s/version='${{ inputs.version }}'/version='${{ inputs.version }}'/" setup.py
        echo "Updated setup.py"
    - name: Check for Python
      if: hashFiles('pyproject.toml') != ''
      shell: bash
      run: |
        echo "Python detected..."
        sed -i 's/^version = "${{ inputs.version }}"/version = "'${{ inputs.version }}'"/' pyproject.toml
        echo "Updated pyproject.toml"
    - name: Check for Java
      if: hashFiles('build.gradle') != ''
      shell: bash
      run: |
        echo "Java detected..."
        sed -i 's/version = "${{ inputs.version }}"/version = "'${{ inputs.version }}'"/' build.gradle
        echo "Updated build.gradle"
    - name: Check for Kotlin
      if: hashFiles('build.gradle.kts') != ''
      shell: bash
      run: |
        echo "Kotlin detected..."
        sed -i 's/version = "${{ inputs.version }}"/version = "'${{ inputs.version }}'"/' build.gradle.kts
        echo "Updated build.gradle.kts"
    - name: Commit and Push Changes
      shell: bash
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        git commit -m "Bump version to ${{ inputs.version }}"
        git push -u origin HEAD
