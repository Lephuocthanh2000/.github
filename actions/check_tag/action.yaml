name: Check Tag
description: Check the current and next tag for the project

inputs:
  increment:
    description: The type of SemVer increment to make
    required: true

outputs:
  current:
    description: The most recent SemVer tag of the project
    value: ${{ steps.determine-current.outputs.version }}
  next:
    description: The new calculated tag for the project
    value: ${{ steps.calculate-next.outputs.version }}

runs:
  using: composite
  steps:
    - name: Determine Current Version
      id: determine-current
      shell: bash
      run: |
        git fetch --tags
        current_version=$(git tag --list "v[0-9]*" --sort=-v:refname | head -n 1)
        if [ -n "$current_version" ]; then
          current_version=${current_version#v}
        else
          echo "No tags found. Using 0.0.0 as the current version."
          current_version="0.0.0"
        fi
        echo "version=$current_version" >> $GITHUB_OUTPUT
        echo "Current Version: $current_version"
    - name: Calculate New Version
      id: calculate-next
      env:
        CURRENT_VERSION: ${{ steps.determine-current.outputs.version }}
        INCREMENT: ${{ inputs.increment }}
      shell: bash
      run: |
        major=$(echo $CURRENT_VERSION | cut -d'.' -f1)
        minor=$(echo $CURRENT_VERSION | cut -d'.' -f2)
        patch=$(echo $CURRENT_VERSION | cut -d'.' -f3)

        case "$INCREMENT" in
          major) new_version="$((major + 1)).0.0";;
          minor) new_version="$major.$((minor + 1)).0";;
          patch) new_version="$major.$minor.$((patch + 1))";;
        esac

        echo "version=$new_version" >> $GITHUB_OUTPUT
        echo "New Version: $new_version"
