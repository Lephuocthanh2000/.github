name: Detects Version
description: Detects the version within the source code per the language detected

outputs:
  current:
    description: The current version of the project
    value: ${{ steps.determine-current.outputs.version }}

runs:
  using: composite
  steps:
    - name: Check for JavaScript
      if: hashFiles('package.json') != ''
      shell: bash
      run: |
        echo "JavaScript detected."
        echo "DETECTED_VERSION=v$(grep -oP '"version": "\K'"$SEMVER_REGEX package.json)" >> $GITHUB_ENV
    - name: Check for .NET
      if: hashFiles('*.csproj') != ''
      shell: bash
      run: |
        echo ".NET detected."
        for csproj in *.csproj; do
          [ -e "$csproj" ] || continue
          echo "DETECTED_VERSION=v$(grep -oP '<Version>\K'"$SEMVER_REGEX" "$csproj")" >> $GITHUB_ENV
        done
    - name: Check for .NET
      if: hashFiles('Directory.Build.props') != ''
      shell: bash
      run: |
        echo ".NET detected."
        echo "DETECTED_VERSION=v$(grep -oP '<Version>\K'"$SEMVER_REGEX" Directory.Build.props)" >> $GITHUB_ENV
    - name: Check for Python
      if: hashFiles('setup.py') != ''
      shell: bash
      run: |
        echo "Python detected."
        echo "DETECTED_VERSION=v$(grep -oP "version='\K'"$SEMVER_REGEX" setup.py)" >> $GITHUB_ENV
    - name: Check for Python
      if: hashFiles('pyproject.toml') != ''
      shell: bash
      run: |
        echo "Python detected."
        echo "DETECTED_VERSION=v$(grep -oP 'version = "\K'"$SEMVER_REGEX" pyproject.toml)" >> $GITHUB_ENV
    - name: Check for Java
      if: hashFiles('build.gradle') != ''
      shell: bash
      run: |
        echo "Java detected."
        echo "DETECTED_VERSION=v$(grep -oP 'version = "\K'"$SEMVER_REGEX" build.gradle)" >> $GITHUB_ENV
    - name: Check for Kotlin
      if: hashFiles('build.gradle.kts') != ''
      shell: bash
      run: |
        echo "Kotlin detected."
        echo "DETECTED_VERSION=v$(grep -oP 'version = "\K'"$SEMVER_REGEX" build.gradle.kts)" >> $GITHUB_ENV
    - name: Output Detected Version
      id: determine-current
      shell: bash
      run: |
        if [ -n "$DETECTED_VERSION" ]; then
          echo "version=$DETECTED_VERSION" >> $GITHUB_OUTPUT
          echo "Detected Version: $DETECTED_VERSION"
        else
          echo "version=0.0.0" >> $GITHUB_OUTPUT
          echo "No version detected!"
        fi
